# let hibernate to figure out the DB dialects
spring.jpa.database=default
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop

# H2
app.datasource.first.platform=H2
app.datasource.first.url=jdbc:h2:mem:db1;DB_CLOSE_ON_EXIT=FALSE
app.datasource.first.username=user
app.datasource.first.password=password
app.datasource.first.configuration.maximum-pool-size=10
app.datasource.first.configuration.connection-timeout=5000

app.datasource.second.platform=H2
app.datasource.second.url=jdbc:h2:mem:db2;DB_CLOSE_ON_EXIT=FALSE
app.datasource.second.username=user
app.datasource.second.password=password
app.datasource.second.configuration.maximum-pool-size=10
app.datasource.second.configuration.connection-timeout=3000

# mysql
#app.datasource.x.platform=mysql
#app.datasource.x.url=jdbc:mysql://<host>:<port>/<databaseInstanceName>
#app.datasource.x.username=<username>
#app.datasource.x.password=<password>
#app.datasource.x.configuration.maximum-pool-size=10
#app.datasource.x.configuration.connection-timeout=5000

# postsql
#app.datasource.y.platform=postgresql
#app.datasource.y.url=jdbc:postgresql://<host>:<port>/<databaseInstanceName>
#app.datasource.y.username=<username>
#app.datasource.y.password=<password>
#app.datasource.y.configuration.maximum-pool-size=<pool-size>
#app.datasource.y.configuration.connection-timeout=5000

# if you use apache common BasicDatasource
#app.datasource.z.platform=postgresql
#app.datasource.z.url=jdbc:postgresql://<host>:<port>/<databaseInstanceName>
#app.datasource.z.username=<username>
#app.datasource.z.password=<password>
#app.datasource.z.max-total=<pool-size>
#app.datasource.x.connection-timeout=5000


#management.endpoints.web.exposure.include=*
